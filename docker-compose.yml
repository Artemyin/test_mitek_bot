version: "3.8"
services:
  db:
    container_name: postgresql_db
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - 5050:80
    depends_on:
      - db

  app:
    container_name: app
    build:
      context: ./app
      dockerfile: Dockerfile
    volumes:
      - ./app:/app
    ports:
      - 8000:8000
    depends_on:
      - db
    restart: always

  redis:
    image: redis:alpine
    container_name: redis

  celery_worker:
    container_name: celery_worker
    restart: always
    build:
      context: ./celery_queue
      dockerfile: Dockerfile
    command: celery -A celery_worker.celery worker -l DEBUG
    volumes:
      - ./celery_queue:/queue
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      - redis

  flower:
    container_name: flower
    build:
      context: ./celery_queue
      dockerfile: Dockerfile
    command: celery -A celery_worker.celery flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      - redis
      - celery_worker
